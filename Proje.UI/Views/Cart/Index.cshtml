@model Proje.UI.Models.DTOs.CartDTO
@{
    ViewData["Title"] = "Sepetim";
}

<div class="row mb-4">
    <div class="col-12">
        <h2>Sepetim</h2>
        <hr />
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Sepet Öğeleri</h5>
            </div>
            <div class="card-body">
                @if (Model != null && Model.CartItems != null && Model.CartItems.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Ürün</th>
                                    <th>Fiyat</th>
                                    <th>Adet</th>
                                    <th>Toplam</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.CartItems)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <img src="@item.ProductImage" alt="@item.ProductName" width="50" class="mr-3">
                                                <div>
                                                    <a href="@Url.Action("Details", "Product", new { id = item.ProductId })">
                                                        @item.ProductName
                                                    </a>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@item.UnitPrice.ToString("C2")</td>
                                        <td>
                                            <div class="input-group w-75">
                                                <div class="input-group-prepend">
                                                    <button class="btn btn-outline-secondary update-quantity" data-id="@item.Id" data-operation="decrease">-</button>
                                                </div>
                                                <input type="text" class="form-control text-center item-quantity" value="@item.Quantity" readonly>
                                                <div class="input-group-append">
                                                    <button class="btn btn-outline-secondary update-quantity" data-id="@item.Id" data-operation="increase">+</button>
                                                </div>
                                            </div>
                                        </td>
                                        <td>@item.Subtotal.ToString("C2")</td>
                                        <td>
                                            <button class="btn btn-danger btn-sm remove-item" data-id="@item.Id">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="text-right">
                        <button id="clear-cart" class="btn btn-outline-danger">Sepeti Temizle</button>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        Sepetinizde ürün bulunmamaktadır. <a href="@Url.Action("Index", "Product")">Alışverişe devam edin</a>.
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Sipariş Özeti</h5>
            </div>
            <div class="card-body">
                @if (Model != null && Model.CartItems != null && Model.CartItems.Any())
                {
                    <div class="d-flex justify-content-between mb-3">
                        <h5>Toplam</h5>
                        <h5>@Model.TotalAmount.ToString("C2")</h5>
                    </div>

                    <a href="@Url.Action("Checkout", "Order")" class="btn btn-success btn-block">
                        <i class="fas fa-shopping-cart mr-2"></i> Ödemeye Geç
                    </a>
                }
                else
                {
                    <div class="alert alert-info">
                        Sepetinizde ürün bulunmamaktadır.
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Miktar güncelleme
            $('.update-quantity').on('click', function() {
                var button = $(this);
                var itemId = button.data('id');
                var operation = button.data('operation');
                var input = button.closest('.input-group').find('.item-quantity');
                var currentQuantity = parseInt(input.val());
                var newQuantity;

                if (operation === 'increase') {
                    newQuantity = currentQuantity + 1;
                } else {
                    newQuantity = currentQuantity > 1 ? currentQuantity - 1 : 1;
                }

                if (newQuantity !== currentQuantity) {
                    $.ajax({
                        url: '/Cart/UpdateCartItem',
                        type: 'POST',
                        data: { itemId: itemId, quantity: newQuantity },
                        success: function(response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert('Ürün miktarı güncellenirken bir hata oluştu: ' + response.message);
                            }
                        },
                        error: function(xhr, status, error) {
                            alert('Ürün miktarı güncellenirken bir hata oluştu: ' + error);
                        }
                    });
                }
            });

            // Ürün kaldırma
            $('.remove-item').on('click', function() {
                if (confirm('Bu ürünü sepetten kaldırmak istediğinize emin misiniz?')) {
                    var itemId = $(this).data('id');

                    $.ajax({
                        url: '/Cart/RemoveCartItem',
                        type: 'POST',
                        data: { itemId: itemId },
                        success: function(response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert('Ürün sepetten kaldırılırken bir hata oluştu: ' + response.message);
                            }
                        },
                        error: function(xhr, status, error) {
                            alert('Ürün sepetten kaldırılırken bir hata oluştu: ' + error);
                        }
                    });
                }
            });

            // Sepeti temizleme
            $('#clear-cart').on('click', function() {
                if (confirm('Sepetinizi tamamen temizlemek istediğinize emin misiniz?')) {
                    $.ajax({
                        url: '/Cart/ClearCart',
                        type: 'POST',
                        success: function(response) {
                            if (response.success) {
                                location.reload();
                            } else {
                                alert('Sepet temizlenirken bir hata oluştu: ' + response.message);
                            }
                        },
                        error: function(xhr, status, error) {
                            alert('Sepet temizlenirken bir hata oluştu: ' + error);
                        }
                    });
                }
            });
        });
    </script>
}