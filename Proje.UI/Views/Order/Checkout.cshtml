@model Proje.UI.Services.OrderService.OrderCreateDTO
@{
    ViewData["Title"] = "Sipariş Tamamla";
}

<div class="row mb-4">
    <div class="col-12">
        <h2>Sipariş Tamamla</h2>
        <hr />
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Teslimat Bilgileri</h5>
            </div>
            <div class="card-body">
                <form asp-action="PlaceOrder" method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <div class="form-group">
                        <label asp-for="Address">Adres</label>
                        <textarea asp-for="Address" class="form-control" rows="3" required></textarea>
                        <span asp-validation-for="Address" class="text-danger"></span>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label asp-for="City">Şehir</label>
                            <input asp-for="City" class="form-control" required>
                            <span asp-validation-for="City" class="text-danger"></span>
                        </div>

                        <div class="form-group col-md-6">
                            <label asp-for="PostalCode">Posta Kodu</label>
                            <input asp-for="PostalCode" class="form-control" required>
                            <span asp-validation-for="PostalCode" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="form-group">
                        <label asp-for="Country">Ülke</label>
                        <input asp-for="Country" class="form-control" value="Türkiye" required>
                        <span asp-validation-for="Country" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <label asp-for="PaymentMethod">Ödeme Yöntemi</label>
                        <select asp-for="PaymentMethod" class="form-control" required>
                            <option value="Kapıda Ödeme">Kapıda Ödeme</option>
                            <option value="Kredi Kartı">Kredi Kartı</option>
                            <option value="Havale/EFT">Havale/EFT</option>
                        </select>
                        <span asp-validation-for="PaymentMethod" class="text-danger"></span>
                    </div>

                    <div class="text-right">
                        <a href="@Url.Action("Index", "Cart")" class="btn btn-secondary">Sepete Dön</a>
                        <button type="submit" class="btn btn-success">
                            <i class="fas fa-check mr-2"></i> Siparişi Tamamla
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="card shadow-sm mb-4">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">Sipariş Özeti</h5>
            </div>
            <div class="card-body">
                <div id="order-summary">
                    <!-- JavaScript ile doldurulacak -->
                    <div class="text-center">
                        <div class="spinner-border text-primary" role="status">
                            <span class="sr-only">Yükleniyor...</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        $(document).ready(function() {
            // Sipariş özetini yükle
            $.ajax({
                url: '/Cart/GetCart',
                type: 'GET',
                dataType: 'json',
                success: function(response) {
                    var cartItems = response.cartItems;
                    var totalAmount = response.totalAmount;

                    var html = '<ul class="list-group mb-3">';

                    $.each(cartItems, function(index, item) {
                        html += `
                            <li class="list-group-item d-flex justify-content-between lh-condensed">
                                <div>
                                    <h6 class="my-0">${item.productName}</h6>
                                    <small class="text-muted">${item.quantity} adet x ${item.unitPrice.toFixed(2)} ₺</small>
                                </div>
                                <span class="text-muted">${item.subtotal.toFixed(2)} ₺</span>
                            </li>
                        `;
                    });

                    html += `
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Toplam</span>
                            <strong>${totalAmount.toFixed(2)} ₺</strong>
                        </li>
                    </ul>`;

                    $('#order-summary').html(html);
                },
                error: function(xhr, status, error) {
                    $('#order-summary').html('<div class="alert alert-danger">Sepet bilgileri yüklenirken bir hata oluştu.</div>');
                    console.error(error);
                }
            });
        });
    </script>
}