@{
    ViewData["Title"] = "Ürünler";
}

<div class="row">
    <div class="col-md-8">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Ürün Listesi - <span id="catName"></span></h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered" id="tbProducts" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Resim</th>
                                <th>Ürün Adı</th>
                                <th>Fiyat</th>
                                <th>Stok</th>
                                <th>Kategori</th>
                                <th>Durum</th>
                                <th>İşlemler</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Ürünler Javascript ile doldurulacak -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Ürün Ekle/Düzenle</h6>
            </div>
            <div class="card-body">
                <form id="productForm">
                    <input type="hidden" id="txtId" />
                    <div class="form-group mb-3">
                        <label for="txtName">Ürün Adı</label>
                        <input type="text" class="form-control" id="txtName" placeholder="Ürün adı giriniz">
                    </div>
                    <div class="form-group mb-3">
                        <label for="txtDescription">Açıklama</label>
                        <textarea class="form-control" id="txtDescription" rows="3" placeholder="Açıklama giriniz"></textarea>
                    </div>
                    <div class="form-group mb-3">
                        <label for="txtPrice">Fiyat</label>
                        <input type="number" step="0.01" class="form-control" id="txtPrice" placeholder="Fiyat giriniz">
                    </div>
                    <div class="form-group mb-3">
                        <label for="txtStock">Stok</label>
                        <input type="number" class="form-control" id="txtStock" placeholder="Stok miktarı giriniz">
                    </div>
                    <div class="form-group mb-3">
                        <label for="txtImageUrl">Resim URL</label>
                        <input type="text" class="form-control" id="txtImageUrl" placeholder="Resim URL giriniz">
                    </div>
                    <div class="form-group mb-3">
                        <label for="cbCategoryId">Kategori</label>
                        <select class="form-control" id="cbCategoryId">
                            <option value="">Seçiniz</option>
                        </select>
                    </div>
                    <div class="form-check mb-3">
                        <input type="checkbox" class="form-check-input" id="cbIsActive" checked>
                        <label class="form-check-label" for="cbIsActive">Aktif</label>
                    </div>
                    <div class="d-grid gap-2 d-md-block">
                        <button type="button" id="btnSave" class="btn btn-success">
                            <i class="fas fa-save"></i> Kaydet
                        </button>
                        <button type="button" id="btnEdit" class="btn btn-warning">
                            <i class="fas fa-edit"></i> Güncelle
                        </button>
                        <button type="button" id="btnDelete" class="btn btn-danger">
                            <i class="fas fa-trash"></i> Sil
                        </button>
                        <button type="button" id="btnCancel" class="btn btn-secondary">
                            <i class="fas fa-times"></i> Vazgeç
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Resim Yükleme Modal -->
<div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productModalLabel">Ürün Resmi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img id="productPicture" class="img-fluid mb-3" style="max-height: 300px;">
                <input type="file" id="fileInput" class="form-control">
            </div>
            <div class="modal-footer">
                <button type="button" id="btnUploadClose" class="btn btn-secondary">Kapat</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function(){
            var apiBaseUrl = "@ViewBag.ApiBaseURL";
            var productId = 0;

            if(!localStorage.getItem("token")) {
                location.href = "/Login";
                return false;
            }

            var token = localStorage.getItem("token");
            var userRoles = localStorage.getItem("userRoles") ? localStorage.getItem("userRoles").split(", ") : [];

            var catId = "@ViewBag.CatId";

            // Sayfa yüklendiğinde
            GetCategoryById();
            GetProductList();
            GetCategoryList();

            // Başlangıçta düzenleme butonlarını gizle
            $("#btnCancel").hide();
            $("#btnEdit").hide();
            $("#btnDelete").hide();

            // Kategori bilgisini getir
            function GetCategoryById() {
                if (!catId || catId == "0") {
                    $("#catName").html("Tüm Ürünler");
                    return;
                }

                $.ajax({
                    url: apiBaseUrl + "/Category/" + catId,
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (data) {
                        $("#catName").html(data.name);
                        $("#cbCategoryId").val(data.id);
                    },
                    error: function (xhr) {
                        console.error("Kategori bilgisi getirilirken hata:", xhr);
                    }
                });
            }

            // Ürün listesini getir
            function GetProductList() {
                var url = catId && catId != "0"
                    ? apiBaseUrl + "/Product/Category/" + catId
                    : apiBaseUrl + "/Product";

                // Önce AJAX çağrısı yapılmadan önce yükleniyor göster
                $("#tbProducts tbody").html('<tr><td colspan="8" class="text-center"><i class="fas fa-spinner fa-spin"></i> Ürünler yükleniyor...</td></tr>');

                $.ajax({
                    url: url,
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (data) {
                        console.log("Ürünler başarıyla getirildi:", data);
                        // Veri yapısını kontrol et ve uygun şekilde işle
                        if (Array.isArray(data)) {
                            // Direkt dizi geliyorsa
                            ProductToTable(data);
                        } else if (data && Array.isArray(data.data)) {
                            // { status: true, data: [...] } şeklinde geliyorsa
                            ProductToTable(data.data);
                        } else if (data && typeof data === 'object') {
                            // Tek bir ürün geliyorsa
                            ProductToTable([data]);
                        } else {
                            $("#tbProducts tbody").html('<tr><td colspan="8" class="text-center">Ürün bulunamadı veya veri formatı uyumsuz</td></tr>');
                            console.error("Beklenmeyen veri formatı:", data);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error("Ürünler getirilirken hata:", xhr.responseText);
                        $("#tbProducts tbody").html('<tr><td colspan="8" class="text-center">Ürün listesi yüklenirken hata oluştu</td></tr>');

                        if(xhr.status === 401) {
                            localStorage.removeItem("token");
                            document.cookie = "token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";
                            location.href = "/Login";
                        }
                        showNotification("Ürünler yüklenirken bir hata oluştu: " + error, "error");
                    }
                });
            }

            // Ürünleri tabloya doldur
            function ProductToTable(data) {
                $("#tbProducts tbody").empty();

                if (!data || data.length === 0) {
                    $("#tbProducts tbody").append("<tr><td colspan='8' class='text-center'>Ürün bulunamadı</td></tr>");
                    return;
                }

                $.each(data, function(i, item) {
                    var row = "<tr>";
                    row += "<td>" + (item.id || '') + "</td>";

                    // Resim URL'sini kontrol et
                    var imgUrl = item.imageUrl || '/images/no-image.png';
                    row += '<td><img src="' + imgUrl + '" class="img-thumbnail btnImg" width="50" data-id="' + item.id + '" style="cursor:pointer;"></td>';

                    row += "<td>" + (item.name || '') + "</td>";
                    row += "<td>" + (item.price || 0) + " ₺</td>";
                    row += "<td>" + (item.stock || 0) + "</td>";
                    row += "<td>" + (item.categoryName || '') + "</td>";

                    var statusBadge = item.isActive
                        ? '<span class="badge bg-success">Aktif</span>'
                        : '<span class="badge bg-danger">Pasif</span>';
                    row += "<td>" + statusBadge + "</td>";

                    row += '<td><button class="btn btn-warning btn-sm btnEdit" data-id="' + item.id + '"><i class="fas fa-edit"></i></button></td>';
                    row += "</tr>";

                    $("#tbProducts tbody").append(row);
                });
            }

            // Kategori listesini getir
            function GetCategoryList() {
                $.ajax({
                    url: apiBaseUrl + "/Category",
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function (data) {
                        $("#cbCategoryId").empty();
                        $("#cbCategoryId").append('<option value="">Seçiniz</option>');

                        $.each(data, function(i, item) {
                            var selected = (item.id == catId) ? 'selected' : '';
                            $("#cbCategoryId").append('<option value="' + item.id + '" ' + selected + '>' + item.name + '</option>');
                        });
                    },
                    error: function (xhr) {
                        console.error("Kategoriler getirilirken hata:", xhr);
                    }
                });
            }

            // Ürün kaydet
            $("#btnSave").click(function(e) {
                e.preventDefault();

                if(!$("#txtName").val()) {
                    showNotification("Ürün adı giriniz!", "error");
                    return;
                }

                if(!$("#cbCategoryId").val()) {
                    showNotification("Kategori seçiniz!", "error");
                    return;
                }

                // Seçilen kategorinin adını al
                var categoryName = $("#cbCategoryId option:selected").text();

                // API'nin beklediği tam veri yapısı
                var product = {
                    id: 0, // Yeni ürün için 0
                    name: $("#txtName").val(),
                    description: $("#txtDescription").val() || "",
                    price: parseFloat($("#txtPrice").val()) || 0,
                    stock: parseInt($("#txtStock").val()) || 0,
                    imageUrl: $("#txtImageUrl").val() || "/images/no-image.png",
                    categoryId: parseInt($("#cbCategoryId").val()),
                    categoryName: categoryName, // Kategori adını seçilen option'dan al
                    isActive: $("#cbIsActive").prop("checked"),
                    created: new Date().toISOString(),
                    updated: new Date().toISOString()
                };

                console.log("Gönderilecek ürün:", product);

                $.ajax({
                    url: apiBaseUrl + "/Product",
                    type: "POST",
                    headers: {
                        "Authorization": "Bearer " + token,
                        "Content-Type": "application/json"
                    },
                    data: JSON.stringify(product),
                    success: function(response) {
                        console.log("Başarılı yanıt:", response);
                        if(response.status) {
                            showNotification("Ürün başarıyla eklendi", "success");
                            GetProductList();

                            // Formu temizle
                            $("#productForm")[0].reset();
                        } else {
                            showNotification(response.message || "Ürün eklenemedi", "error");
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error("Ürün eklenirken hata:", xhr.responseText);
                        try {
                            var errorObj = JSON.parse(xhr.responseText);
                            showNotification("Hata: " + (errorObj.message || error), "error");
                        } catch(e) {
                            showNotification("Ürün eklenirken bir hata oluştu: " + error, "error");
                        }
                    }
                });
            });

            // Ürün düzenleme formunu doldur
            $(document).on("click", ".btnEdit", function() {
                var id = $(this).data("id");

                $.ajax({
                    url: apiBaseUrl + "/Product/" + id,
                    type: "GET",
                    headers: {
                        "Authorization": "Bearer " + token
                    },
                    success: function(data) {
                        $("#txtId").val(data.id);
                        $("#txtName").val(data.name);
                        $("#txtDescription").val(data.description);
                        $("#txtPrice").val(data.price);
                        $("#txtStock").val(data.stock);
                        $("#txtImageUrl").val(data.imageUrl);
                        $("#cbCategoryId").val(data.categoryId);
                        $("#cbIsActive").prop("checked", data.isActive);

                        // Orijinal oluşturma tarihini sakla (gizli alan)
                        if (!$("#hdnCreated").length) {
                            $("<input>").attr({
                                type: "hidden",
                                id: "hdnCreated",
                                value: data.created
                            }).appendTo("#productForm");
                        } else {
                            $("#hdnCreated").val(data.created);
                        }

                        // Butonları göster/gizle
                        $("#btnSave").hide();
                        $("#btnEdit").show();
                        $("#btnDelete").show();
                        $("#btnCancel").show();
                    },
                    error: function(xhr) {
                        console.error("Ürün getirilirken hata:", xhr.responseText);
                        showNotification("Ürün bilgileri yüklenirken bir hata oluştu", "error");
                    }
                });
            });

            // Ürün güncelle
            $("#btnEdit").click(function(e) {
                e.preventDefault();

                if(!$("#txtName").val()) {
                    showNotification("Ürün adı giriniz!", "error");
                    return;
                }

                if(!$("#cbCategoryId").val()) {
                    showNotification("Kategori seçiniz!", "error");
                    return;
                }

                var id = $("#txtId").val();
                var categoryName = $("#cbCategoryId option:selected").text();

                // API'nin beklediği tam veri yapısı
                var product = {
                    id: parseInt(id),
                    name: $("#txtName").val(),
                    description: $("#txtDescription").val() || "",
                    price: parseFloat($("#txtPrice").val()) || 0,
                    stock: parseInt($("#txtStock").val()) || 0,
                    imageUrl: $("#txtImageUrl").val() || "/images/no-image.png",
                    categoryId: parseInt($("#cbCategoryId").val()),
                    categoryName: categoryName, // Seçilen kategorinin adı
                    isActive: $("#cbIsActive").prop("checked"),
                    created: $("#hdnCreated").val() || new Date().toISOString(), // Gizli alanda saklanmışsa
                    updated: new Date().toISOString()
                };

                console.log("Güncellenecek ürün:", product);

                $.ajax({
                    url: apiBaseUrl + "/Product/" + id,
                    type: "PUT",
                    headers: {
                        "Authorization": "Bearer " + token,
                        "Content-Type": "application/json"
                    },
                    data: JSON.stringify(product),
                    success: function(response) {
                        if(response.status) {
                            showNotification("Ürün başarıyla güncellendi", "success");
                            GetProductList();

                            // Formu temizle ve butonları sıfırla
                            $("#productForm")[0].reset();
                            $("#btnSave").show();
                            $("#btnEdit").hide();
                            $("#btnDelete").hide();
                            $("#btnCancel").hide();
                        } else {
                            showNotification(response.message || "Ürün güncellenemedi", "error");
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error("Ürün güncellenirken hata:", xhr.responseText);
                        try {
                            var errorObj = JSON.parse(xhr.responseText);
                            showNotification("Hata: " + (errorObj.message || error), "error");
                        } catch(e) {
                            showNotification("Ürün güncellenirken bir hata oluştu: " + error, "error");
                        }
                    }
                });
            });

            // Ürün sil
            $("#btnDelete").click(function(e) {
                e.preventDefault();

                var id = $("#txtId").val();

                if(confirm("Bu ürünü silmek istediğinizden emin misiniz?")) {
                    $.ajax({
                        url: apiBaseUrl + "/Product/" + id,
                        type: "DELETE",
                        headers: {
                            "Authorization": "Bearer " + token
                        },
                        success: function(response) {
                            if(response.status) {
                                showNotification("Ürün başarıyla silindi", "success");
                                GetProductList();

                                // Formu temizle ve butonları sıfırla
                                $("#productForm")[0].reset();
                                $("#btnSave").show();
                                $("#btnEdit").hide();
                                $("#btnDelete").hide();
                                $("#btnCancel").hide();
                            } else {
                                showNotification(response.message || "Ürün silinemedi", "error");
                            }
                        },
                        error: function(xhr, status, error) {
                            console.error("Ürün silinirken hata:", xhr.responseText);
                            try {
                                var errorObj = JSON.parse(xhr.responseText);
                                showNotification("Hata: " + (errorObj.message || error), "error");
                            } catch(e) {
                                showNotification("Ürün silinirken bir hata oluştu: " + error, "error");
                            }
                        }
                    });
                }
            });

            // İptal butonu
            $("#btnCancel").click(function(e) {
                e.preventDefault();

                // Formu temizle ve butonları sıfırla
                $("#productForm")[0].reset();
                $("#btnSave").show();
                $("#btnEdit").hide();
                $("#btnDelete").hide();
                $("#btnCancel").hide();
            });

            // Resme tıklama (resim görüntüleme)
            $(document).on("click", ".btnImg", function() {
                var src = $(this).attr("src");
                productId = $(this).data("id");
                $("#productPicture").attr("src", src);
                $("#productModal").modal("show");
            });

            // Resim dosyası seçimi
            $("#fileInput").change(function() {
                var files = $(this).prop('files');
                if (files && files[0]) {
                    var reader = new FileReader();
                    reader.onload = function(e) {
                        $('#productPicture').attr('src', e.target.result);
                        var fileData = e.target.result;

                        // Dosya uzantısını belirle
                        var fileExtension = files[0].name.split('.').pop().toLowerCase();
                        ProductPicUpdate(fileData, fileExtension);
                    };
                    reader.readAsDataURL(files[0]);
                }
            });

            // Ürün resmi güncelleme
            function ProductPicUpdate(picData, picExt) {
                var upload = {
                    productId: productId,
                    picData: picData,
                    picExt: "." + picExt
                };

                $.ajax({
                    url: apiBaseUrl + "/Product/Upload",
                    type: "POST",
                    headers: {
                        "Authorization": "Bearer " + token,
                        "Content-Type": "application/json"
                    },
                    data: JSON.stringify(upload),
                    success: function(response) {
                        if (response.status) {
                            showNotification("Ürün fotoğrafı başarıyla güncellendi", "success");
                        } else {
                            showNotification(response.message || "Resim yüklenemedi", "error");
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error("Resim yüklenirken hata:", xhr.responseText);
                        try {
                            var errorObj = JSON.parse(xhr.responseText);
                            showNotification("Hata: " + (errorObj.message || error), "error");
                        } catch(e) {
                            showNotification("Resim yüklenirken bir hata oluştu: " + error, "error");
                        }
                    }
                });
            }

            // Modal kapatma
            $("#btnUploadClose").click(function() {
                $("#productModal").modal("hide");
                GetProductList();
            });
        });
    </script>
}